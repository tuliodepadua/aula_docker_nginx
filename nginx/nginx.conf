worker_processes  1;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  keepalive_timeout  65;

  # Rede interna: containers "node" e "py" serão resolvidos por DNS do Docker
  upstream node_upstream {
    server node:3000;
  }

  upstream py_upstream {
    server py:5000;
  }

  server {
    listen 80;
    server_name _;

    # Rota para o serviço Node
    location /node/ {
      proxy_pass http://node_upstream/node;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Rota para o serviço Python
    location /py/ {
      proxy_pass http://py_upstream/py;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Home simples
    location / {
      return 200 "NGINX reverse proxy is up. Try /node/ and /py/\n";
      add_header Content-Type text/plain;
    }
  }
}
